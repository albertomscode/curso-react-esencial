Uso de useState:
        useState es un hook de React que permite manejar el estado dentro de componentes funcionales.
        Se utiliza para crear una variable de estado y una función para actualizarla. En este caso, se define formData y setFormData.

    Estructura del Estado:
        formData es un objeto que contiene tres propiedades: username, email y password, todas inicializadas como cadenas vacías. Esto representa los datos del formulario.
        La declaración inicial se realiza de la siguiente manera:

        javascript

    const [formData, setFormData] = useState({
      username: '',
      email: '',
      password: '',
    });

Vinculación de Input con Estado:

    Cada campo del formulario (input) se conecta al estado mediante la propiedad value.
    Se elimina cualquier evento que pudiera interferir, como onClick, y se asegura que cada input esté vinculado con su correspondiente propiedad del estado:
        Para el input de usuario:

        javascript

<input type="text" name="username" value={formData.username} />

Para el input de correo electrónico:

javascript

<input type="email" name="email" value={formData.email} />

Para el input de contraseña:

javascript

        <input type="password" name="password" value={formData.password} />

Valor por Defecto:

    Se puede establecer un valor por defecto para uno de los campos. Por ejemplo, para el campo de correo electrónico, se puede asignar:

    javascript

        formData.email = 'ejemplo@ejemplo.com';

Flujo del código:

    Inicialización del Estado:
        Se crea el estado formData con las propiedades necesarias para el formulario.

    Conexión de Input al Estado:
        Se eliminan eventos innecesarios y se vinculan los inputs al estado utilizando value.
        Este enfoque asegura que el formulario esté conectado a los datos del estado, permitiendo que los cambios en el estado se reflejen en los inputs.

    Ejemplo de Valor por Defecto:
        Se muestra cómo establecer un valor inicial en el formulario, demostrando que la conexión entre el estado y el formulario está funcionando correctamente.

Lecciones clave:

    Conexión entre estado y formularios permite que los formularios reflejen automáticamente los datos que se encuentran en el estado de la aplicación.
    Es importante usar value para vincular el estado de React con los inputs del formulario, eliminando eventos que puedan causar conflictos.
    Manejo del estado con useState es fundamental para crear formularios interactivos y dinámicos en aplicaciones React.

Este enfoque es esencial para manejar formularios en React de manera efectiva y mantener la sincronización entre la interfaz de usuario y los datos del estado.